// Generated by view binder compiler. Do not edit!
package com.example.module7.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.module7.R;
import com.example.module7.components.DrawingView;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.slider.RangeSlider;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDrawingBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout ConstraintLayout;

  @NonNull
  public final MaterialButton approveBtn;

  @NonNull
  public final MaterialButton backBtn;

  @NonNull
  public final RangeSlider brushSize;

  @NonNull
  public final RangeSlider brushTransparent;

  @NonNull
  public final MaterialButton clearButton;

  @NonNull
  public final ColorsBarBinding colorsBar;

  @NonNull
  public final DrawingView drawingView;

  @NonNull
  public final AppCompatImageView imageView;

  @NonNull
  public final TextView text1;

  @NonNull
  public final TextView text2;

  private ActivityDrawingBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout ConstraintLayout, @NonNull MaterialButton approveBtn,
      @NonNull MaterialButton backBtn, @NonNull RangeSlider brushSize,
      @NonNull RangeSlider brushTransparent, @NonNull MaterialButton clearButton,
      @NonNull ColorsBarBinding colorsBar, @NonNull DrawingView drawingView,
      @NonNull AppCompatImageView imageView, @NonNull TextView text1, @NonNull TextView text2) {
    this.rootView = rootView;
    this.ConstraintLayout = ConstraintLayout;
    this.approveBtn = approveBtn;
    this.backBtn = backBtn;
    this.brushSize = brushSize;
    this.brushTransparent = brushTransparent;
    this.clearButton = clearButton;
    this.colorsBar = colorsBar;
    this.drawingView = drawingView;
    this.imageView = imageView;
    this.text1 = text1;
    this.text2 = text2;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDrawingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDrawingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_drawing, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDrawingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout ConstraintLayout = (LinearLayout) rootView;

      id = R.id.approve_btn;
      MaterialButton approveBtn = ViewBindings.findChildViewById(rootView, id);
      if (approveBtn == null) {
        break missingId;
      }

      id = R.id.back_btn;
      MaterialButton backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.brush_size;
      RangeSlider brushSize = ViewBindings.findChildViewById(rootView, id);
      if (brushSize == null) {
        break missingId;
      }

      id = R.id.brush_transparent;
      RangeSlider brushTransparent = ViewBindings.findChildViewById(rootView, id);
      if (brushTransparent == null) {
        break missingId;
      }

      id = R.id.clearButton;
      MaterialButton clearButton = ViewBindings.findChildViewById(rootView, id);
      if (clearButton == null) {
        break missingId;
      }

      id = R.id.colors_bar;
      View colorsBar = ViewBindings.findChildViewById(rootView, id);
      if (colorsBar == null) {
        break missingId;
      }
      ColorsBarBinding binding_colorsBar = ColorsBarBinding.bind(colorsBar);

      id = R.id.drawingView;
      DrawingView drawingView = ViewBindings.findChildViewById(rootView, id);
      if (drawingView == null) {
        break missingId;
      }

      id = R.id.imageView;
      AppCompatImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.text1;
      TextView text1 = ViewBindings.findChildViewById(rootView, id);
      if (text1 == null) {
        break missingId;
      }

      id = R.id.text2;
      TextView text2 = ViewBindings.findChildViewById(rootView, id);
      if (text2 == null) {
        break missingId;
      }

      return new ActivityDrawingBinding((LinearLayout) rootView, ConstraintLayout, approveBtn,
          backBtn, brushSize, brushTransparent, clearButton, binding_colorsBar, drawingView,
          imageView, text1, text2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
