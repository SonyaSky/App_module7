// Generated by view binder compiler. Do not edit!
package com.example.module7.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.module7.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ColorsBarBinding implements ViewBinding {
  @NonNull
  private final HorizontalScrollView rootView;

  @NonNull
  public final MaterialButton black;

  @NonNull
  public final MaterialButton blue;

  @NonNull
  public final MaterialButton green;

  @NonNull
  public final HorizontalScrollView horizontalscrollView;

  @NonNull
  public final MaterialButton lightBlue;

  @NonNull
  public final MaterialButton orange;

  @NonNull
  public final MaterialButton pink;

  @NonNull
  public final MaterialButton purple;

  @NonNull
  public final MaterialButton red;

  @NonNull
  public final MaterialButton white;

  @NonNull
  public final MaterialButton yellow;

  private ColorsBarBinding(@NonNull HorizontalScrollView rootView, @NonNull MaterialButton black,
      @NonNull MaterialButton blue, @NonNull MaterialButton green,
      @NonNull HorizontalScrollView horizontalscrollView, @NonNull MaterialButton lightBlue,
      @NonNull MaterialButton orange, @NonNull MaterialButton pink, @NonNull MaterialButton purple,
      @NonNull MaterialButton red, @NonNull MaterialButton white, @NonNull MaterialButton yellow) {
    this.rootView = rootView;
    this.black = black;
    this.blue = blue;
    this.green = green;
    this.horizontalscrollView = horizontalscrollView;
    this.lightBlue = lightBlue;
    this.orange = orange;
    this.pink = pink;
    this.purple = purple;
    this.red = red;
    this.white = white;
    this.yellow = yellow;
  }

  @Override
  @NonNull
  public HorizontalScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ColorsBarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ColorsBarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.colors_bar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ColorsBarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.black;
      MaterialButton black = ViewBindings.findChildViewById(rootView, id);
      if (black == null) {
        break missingId;
      }

      id = R.id.blue;
      MaterialButton blue = ViewBindings.findChildViewById(rootView, id);
      if (blue == null) {
        break missingId;
      }

      id = R.id.green;
      MaterialButton green = ViewBindings.findChildViewById(rootView, id);
      if (green == null) {
        break missingId;
      }

      HorizontalScrollView horizontalscrollView = (HorizontalScrollView) rootView;

      id = R.id.light_blue;
      MaterialButton lightBlue = ViewBindings.findChildViewById(rootView, id);
      if (lightBlue == null) {
        break missingId;
      }

      id = R.id.orange;
      MaterialButton orange = ViewBindings.findChildViewById(rootView, id);
      if (orange == null) {
        break missingId;
      }

      id = R.id.pink;
      MaterialButton pink = ViewBindings.findChildViewById(rootView, id);
      if (pink == null) {
        break missingId;
      }

      id = R.id.purple;
      MaterialButton purple = ViewBindings.findChildViewById(rootView, id);
      if (purple == null) {
        break missingId;
      }

      id = R.id.red;
      MaterialButton red = ViewBindings.findChildViewById(rootView, id);
      if (red == null) {
        break missingId;
      }

      id = R.id.white;
      MaterialButton white = ViewBindings.findChildViewById(rootView, id);
      if (white == null) {
        break missingId;
      }

      id = R.id.yellow;
      MaterialButton yellow = ViewBindings.findChildViewById(rootView, id);
      if (yellow == null) {
        break missingId;
      }

      return new ColorsBarBinding((HorizontalScrollView) rootView, black, blue, green,
          horizontalscrollView, lightBlue, orange, pink, purple, red, white, yellow);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
