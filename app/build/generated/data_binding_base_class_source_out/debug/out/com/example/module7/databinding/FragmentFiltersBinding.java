// Generated by view binder compiler. Do not edit!
package com.example.module7.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.module7.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFiltersBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton blue;

  @NonNull
  public final ImageButton bnw;

  @NonNull
  public final ImageButton dark;

  @NonNull
  public final ImageButton gray;

  @NonNull
  public final ImageButton green;

  @NonNull
  public final HorizontalScrollView horizontalscrollView;

  @NonNull
  public final ImageButton invert;

  @NonNull
  public final ImageButton light;

  @NonNull
  public final ImageButton orange;

  @NonNull
  public final ImageButton pink;

  @NonNull
  public final ImageButton purple;

  @NonNull
  public final ImageButton red;

  @NonNull
  public final ImageButton sage;

  @NonNull
  public final ImageButton sepia;

  @NonNull
  public final ImageButton yellow;

  private FragmentFiltersBinding(@NonNull LinearLayout rootView, @NonNull ImageButton blue,
      @NonNull ImageButton bnw, @NonNull ImageButton dark, @NonNull ImageButton gray,
      @NonNull ImageButton green, @NonNull HorizontalScrollView horizontalscrollView,
      @NonNull ImageButton invert, @NonNull ImageButton light, @NonNull ImageButton orange,
      @NonNull ImageButton pink, @NonNull ImageButton purple, @NonNull ImageButton red,
      @NonNull ImageButton sage, @NonNull ImageButton sepia, @NonNull ImageButton yellow) {
    this.rootView = rootView;
    this.blue = blue;
    this.bnw = bnw;
    this.dark = dark;
    this.gray = gray;
    this.green = green;
    this.horizontalscrollView = horizontalscrollView;
    this.invert = invert;
    this.light = light;
    this.orange = orange;
    this.pink = pink;
    this.purple = purple;
    this.red = red;
    this.sage = sage;
    this.sepia = sepia;
    this.yellow = yellow;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFiltersBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFiltersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_filters, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFiltersBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.blue;
      ImageButton blue = ViewBindings.findChildViewById(rootView, id);
      if (blue == null) {
        break missingId;
      }

      id = R.id.bnw;
      ImageButton bnw = ViewBindings.findChildViewById(rootView, id);
      if (bnw == null) {
        break missingId;
      }

      id = R.id.dark;
      ImageButton dark = ViewBindings.findChildViewById(rootView, id);
      if (dark == null) {
        break missingId;
      }

      id = R.id.gray;
      ImageButton gray = ViewBindings.findChildViewById(rootView, id);
      if (gray == null) {
        break missingId;
      }

      id = R.id.green;
      ImageButton green = ViewBindings.findChildViewById(rootView, id);
      if (green == null) {
        break missingId;
      }

      id = R.id.horizontalscrollView;
      HorizontalScrollView horizontalscrollView = ViewBindings.findChildViewById(rootView, id);
      if (horizontalscrollView == null) {
        break missingId;
      }

      id = R.id.invert;
      ImageButton invert = ViewBindings.findChildViewById(rootView, id);
      if (invert == null) {
        break missingId;
      }

      id = R.id.light;
      ImageButton light = ViewBindings.findChildViewById(rootView, id);
      if (light == null) {
        break missingId;
      }

      id = R.id.orange;
      ImageButton orange = ViewBindings.findChildViewById(rootView, id);
      if (orange == null) {
        break missingId;
      }

      id = R.id.pink;
      ImageButton pink = ViewBindings.findChildViewById(rootView, id);
      if (pink == null) {
        break missingId;
      }

      id = R.id.purple;
      ImageButton purple = ViewBindings.findChildViewById(rootView, id);
      if (purple == null) {
        break missingId;
      }

      id = R.id.red;
      ImageButton red = ViewBindings.findChildViewById(rootView, id);
      if (red == null) {
        break missingId;
      }

      id = R.id.sage;
      ImageButton sage = ViewBindings.findChildViewById(rootView, id);
      if (sage == null) {
        break missingId;
      }

      id = R.id.sepia;
      ImageButton sepia = ViewBindings.findChildViewById(rootView, id);
      if (sepia == null) {
        break missingId;
      }

      id = R.id.yellow;
      ImageButton yellow = ViewBindings.findChildViewById(rootView, id);
      if (yellow == null) {
        break missingId;
      }

      return new FragmentFiltersBinding((LinearLayout) rootView, blue, bnw, dark, gray, green,
          horizontalscrollView, invert, light, orange, pink, purple, red, sage, sepia, yellow);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
